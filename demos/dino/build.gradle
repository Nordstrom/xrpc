// Load plugins.
buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
  }
}

plugins {
  id 'com.github.sherter.google-java-format' version '0.6'
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.nordstrom.xrpc'
version = '0.1.1-SNAPSHOT'
archivesBaseName = 'xrpc-dino-demo'

description = """xrpc dino demo project."""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
  mavenLocal()
  jcenter()
  maven { url 'http://repo.maven.apache.org/maven2' }
}

dependencies {
  compile project(':xrpc')
  compile 'com.google.protobuf:protobuf-java:3.0.0'
  compile 'com.squareup.moshi:moshi:1.5.0'
  compile 'com.typesafe:config:1.3.1'
  compile 'io.netty:netty-all:4.1.19.Final'
  compile 'org.projectlombok:lombok:1.16.16'
  compile 'org.slf4j:slf4j-api:1.7.25'
  testCompile 'junit:junit:4.12'
  runtimeOnly 'ch.qos.logback:logback-classic:1.1.7'
  runtimeOnly 'ch.qos.logback:logback-core:1.1.7'
  runtimeOnly 'org.codehaus.groovy:groovy-all:2.4.1'
}

sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/java'
    }
  }
}

// Configure protobuf build.
protobuf {
  // Configure the protoc executable to use the official distribution.
  protoc {
    artifact = 'com.google.protobuf:protoc:3.0.0'
  }

  generateProtoTasks {
    ofSourceSet('main')*.plugins {
      xrpc {}
    }
  }
}

shadowJar {
  manifest {
    attributes 'Main-Class': 'com.nordstrom.xrpc.demos.dino.Application'
  }
}
