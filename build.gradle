
buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
  }
}

plugins {
  id 'com.github.sherter.google-java-format' version '0.6'
  id 'net.researchgate.release' version '2.4.0'
  id 'com.github.spotbugs' version '1.6.0'
  id 'com.jfrog.bintray' version '1.7.3'
}

release {
  preTagCommitMessage = 'Updating to release version '
  tagCommitMessage = 'New release: '
  newVersionCommitMessage = 'Creating new SNAPSHOT version '
  git {
    pushToRemote = 'upstream'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'

// Junit 5 gradle runner.
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.nordstrom.xrpc'
archivesBaseName = 'xrpc'

description = """Simple, production ready Java API server built on top of functional composition."""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    // The tls package uses a ton of proprietary APIs that generate warnings. Suppress these (and fork
    // the compiler so that the definition works).
    options.compilerArgs += ['-XDignore.symbol.file']
    options.fork = true
    options.forkOptions.executable = 'javac'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'com.google.guava:guava:21.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.okio:okio:1.13.0'
    compile 'com.typesafe:config:1.3.1'
    compile 'com.xjeffrose:xio:0.13.0'
    compile 'io.dropwizard.metrics:metrics-core:3.2.5'
    compile 'io.dropwizard.metrics:metrics-healthchecks:3.2.5'
    compile 'io.dropwizard.metrics:metrics-json:3.2.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.2'
    compile 'io.netty:netty-all:4.1.19.Final'
    compile 'io.netty:netty-tcnative-boringssl-static:2.0.7.Final'
    compile 'io.netty:netty-transport-native-epoll:4.1.19.Final'
    compile 'io.netty:netty-transport-native-kqueue:4.1.19.Final'
    compile 'org.projectlombok:lombok:1.16.16'
    compile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.1'
    testCompile 'org.apiguardian:apiguardian-api:1.0.0'
    testCompile 'org.mockito:mockito-core:2.13.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
}

// Run with the latest checkstyle version. Required for our checkstyle.xml.
checkstyle {
  toolVersion '8.3'
}

spotbugs {
  toolVersion = '3.1.0'
  ignoreFailures = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  extraArgs = ['-html:fancy-hist.xsl']
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

// Add Javadoc + sources jars to artifacts list.
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def pomExtra = {
  scm {
    connection 'scm:git:git@github.com:Nordstrom/xrpc.git'
      developerConnection 'scm:git:git@github.com:Nordstrom/xrpc.git'
      url 'https://github.com/Nordstrom/xrpc'
  }

  licenses {
    license {
      name 'The Apache License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    }
  }

  developers {
    developer {
      id 'jkinkead'
        name 'Jesse Kinkead'
        email 'jesse.kinkead@nordstrom.com'
    }
    developer {
      id 'xjdr'
        name 'Jeff Rose'
        email 'jeff.rose@nordstrom.com'
    }
  }
}

publishing {
  publications {
    xrpcMaven(MavenPublication) {
      from components.java
      groupId rootProject.group
      artifactId rootProject.archivesBaseName
      version rootProject.version
      artifact sourcesJar
      artifact javadocJar

      pom.withXml {
        asNode().appendNode('description', rootProject.description)
        asNode().appendNode('name', 'xrpc library')
        asNode().appendNode('url', 'https://github.com/Nordstrom/xrpc')
        asNode().children().last() + pomExtra
      }
    }
  }
}

bintray {
  user = rootProject.hasProperty('bintrayUsername') ? rootProject.bintrayUsername : ''
  key = rootProject.hasProperty('bintrayKey') ? rootProject.bintrayKey : ''
  publications = ['xrpcMaven']
  // Automatically publish the version (make it public).
  publish = true
  pkg {
    userOrg = 'nordstromoss'
    repo = 'oss_maven'
    name = rootProject.archivesBaseName
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/Nordstrom/xrpc.git'
    version {
      name = rootProject.version
    }
  }
}

// Run the upload as a part of the "release" task.
afterReleaseBuild.dependsOn bintrayUpload
