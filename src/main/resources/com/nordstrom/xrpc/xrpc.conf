# Default configuration for an xrpc application.

# The port to run on.
server.port = 8080

# The maximum allowed time between reads before timing out. Set to zero to disable read timeouts.
reader_idle_timeout_seconds = 200
# The maximum allowed time between writes before timing out. Set to zero to disable write timeouts.
writer_idle_timeout_seconds = 400
# The maximum allowed time between either read or write before timing out. Set to zero to disable
# this kind of timeout.
all_idle_timeout_seconds = 0

# The thread name format. See:
# http://google.github.io/guava/releases/23.0/api/docs/com/google/common/util/concurrent/ThreadFactoryBuilder.html#setNameFormat-java.lang.String-
worker_name_format = "xrpc-worker-%d"

# The size of the boss thread group which handles incoming requests.
boss_thread_count = 4
# The size of the worker thread group which processes requests and sends the results to clients.
worker_thread_count = 40

# The maximum number of concurrent connections to accept at once before dropping new connections.
# Set to zero to disable connection limiting.
max_connections = 2000

# The maximum number of requests per second to allow before limiting new connection.
# See: http://google.github.io/guava/releases/23.0/api/docs/com/google/common/util/concurrent/RateLimiter.html
# Once the soft limit is hit, the server will return a HTTP 429 TOO MANY REQUESTS
# If the hard limit is reached, the system will block to protect the back end resources

# This is the per server rate limiter
soft_req_per_sec = 500.0
hard_req_per_sec = 550.0

## This is the global rate limiter
global_soft_req_per_sec = 700.0
global_hard_req_per_sec = 750.0

## Override rate limiter for a single client. This does not impact the global rate limiter
## Syntax is  [{ <ip> : "<soft_limit>:<hard limit> }]
req_per_second_override = [
  {"localhost" : "550:600" }
]

# Enable the desired metrics reporters
slf4j_reporter = false
slf4j_reporter_polling_rate = 30

jmx_reporter = true

console_reporter = false
console_reporter_polling_rate = 30

# IP Black List
ip_black_list = []

# IP White List
ip_white_list = []

# The raw X509 certificate to use for TLS.
cert = """
-----BEGIN CERTIFICATE-----
MIIDEDCCAnmgAwIBAgIJAO4gmvLYMMccMA0GCSqGSIb3DQEBBQUAMGQxCzAJBgNV
BAYTAlVTMQswCQYDVQQIEwJJTDEQMA4GA1UEBxMHQ2hpY2FnbzENMAsGA1UEChME
eGlvMjEMMAoGA1UECxMDZGV2MRkwFwYDVQQDExB4aW8yLmV4YW1wbGUuY29tMB4X
DTE1MDgxMjE5MzUwOVoXDTE4MDYwMTE5MzUwOVowZDELMAkGA1UEBhMCVVMxCzAJ
BgNVBAgTAklMMRAwDgYDVQQHEwdDaGljYWdvMQ0wCwYDVQQKEwR4aW8yMQwwCgYD
VQQLEwNkZXYxGTAXBgNVBAMTEHhpbzIuZXhhbXBsZS5jb20wgZ8wDQYJKoZIhvcN
AQEBBQADgY0AMIGJAoGBALE1ScG8WfneBnfo44uKgKEBTyMIoFW1SzQn3hkV8Pj/
clF7wdRYruzwvL4FbvQWBzurRyUvjWyScdv9IecS0xXTmeJGlTfxhmdlhHVwdFQa
Xd0cvJuotor/7cs0MxiWHPl/k7X/s846IDw7x/27I/Wh4Q3F+mT9oaljCd9hHn57
AgMBAAGjgckwgcYwHQYDVR0OBBYEFP0sRxdfrg1yqo6Q9UdSlOcC4+v6MIGWBgNV
HSMEgY4wgYuAFP0sRxdfrg1yqo6Q9UdSlOcC4+v6oWikZjBkMQswCQYDVQQGEwJV
UzELMAkGA1UECBMCSUwxEDAOBgNVBAcTB0NoaWNhZ28xDTALBgNVBAoTBHhpbzIx
DDAKBgNVBAsTA2RldjEZMBcGA1UEAxMQeGlvMi5leGFtcGxlLmNvbYIJAO4gmvLY
MMccMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEArIDxvkqZyWNdykA4
6F5VdT64OvGsKb4mZNEF/nypq4U29w5f/JEAsp3jwVTqqI7Xgk7OeUXIyWJZBAga
oq4hs6yvhrcLApdHoWI+2aOevtIh00P8QBmp4Ibbmh657ZWc3u8OsHGQ03ldpFXJ
8eV4C/fb9jLnd/I1unwJULz1/vs=
-----END CERTIFICATE-----
"""

# The private key to use for TLS.
key = """
-----BEGIN RSA PRIVATE KEY-----
MIICXAIBAAKBgQCxNUnBvFn53gZ36OOLioChAU8jCKBVtUs0J94ZFfD4/3JRe8HU
WK7s8Ly+BW70Fgc7q0clL41sknHb/SHnEtMV05niRpU38YZnZYR1cHRUGl3dHLyb
qLaK/+3LNDMYlhz5f5O1/7POOiA8O8f9uyP1oeENxfpk/aGpYwnfYR5+ewIDAQAB
AoGAY3sNz+PkAwCgUvp7mx+CvGAWxA0YrWTcNghXh2+o2q/UxmeaVZH/iWZQHsDA
G+it4NJzWy3Jz/SaVKxTNvx7YKoEizihsw0aL1t9LaVqX3DWsp+ePRn1jxIxZqNe
92Hrl9rACvM7caa7zLAiu9zcdl39zmIXvPXVHKn6O5AMx0ECQQDsD27iwSrk7vWW
igxDtlIKy3T1WJB/fTI5lHbinAKL+mUO0NRQ/cVz/w0FuFN4VKYCcL15Kis7hGr2
O5oNM0jbAkEAwC08mYS+TCHnLp1/KmPkog4yiBcWbM389nf+1OF1EZ9OvNC7A4IZ
UcHVPB5uMYX4QlfsKHLolGQomnkpOLlC4QJAeRGBQXLo2Pllo4uxtpivgzHODncZ
xQkk1Ts7rgVtmPUXF34rJk7BEjjhKOnchX6ElgPUaWwjOCc15Iu0+sguuQJAcMNa
dp5MZzHRjCnAL2h0BJ8eCXq6ntdzok+gyNsOLWvz8Jjt004oey+oZmFYuVhp5sve
d5GNZV0r8hA8HtueIQJBAJQR+eWTcwLga1vtn10RL1YfNqyC4fismcDbYXXJc1NI
7W85HF8N9OzsxZEsYAt0ogTpg5UdHmGvv0mUZdTh0mU=
-----END RSA PRIVATE KEY-----
"""
