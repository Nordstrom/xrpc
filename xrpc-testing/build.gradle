buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
  }
}

plugins {
  id 'com.github.sherter.google-java-format' version '0.6'
  id 'com.github.spotbugs' version '1.6.0'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'

group = 'com.nordstrom.xrpc'
archivesBaseName = 'xrpc'

description = """Testing Utilities for simple, production ready Java API server built on top of functional composition."""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  // The tls package uses a ton of proprietary APIs that generate warnings. Suppress these (and fork
  // the compiler so that the definition works).
  options.compilerArgs += [
    '-XDignore.symbol.file',
    '-Xlint:auxiliaryclass,cast,classfile,deprecation,dep-ann,divzero,empty,fallthrough,' +
      'finally,options,overloads,overrides,path,rawtypes,static,try,unchecked,varargs',
    '-Werror']
  options.fork = true
  options.forkOptions.executable = 'javac'
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'com.squareup.okhttp3:okhttp:3.8.0'
  compile 'com.squareup.okio:okio:1.13.0'
  compile 'com.typesafe:config:1.3.1'
}

// Run with the latest checkstyle version. Required for our checkstyle.xml.
checkstyle {
  toolVersion '8.3'
}

spotbugs {
  toolVersion = '3.1.0'
  ignoreFailures = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  extraArgs = ['-html:fancy-hist.xsl']
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

// Add Javadoc + sources jars to artifacts list.
task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}
task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

def pomExtra = {
  scm {
    connection 'scm:git:git@github.com:Nordstrom/xrpc.git'
    developerConnection 'scm:git:git@github.com:Nordstrom/xrpc.git'
    url 'https://github.com/Nordstrom/xrpc'
  }

  licenses {
    license {
      name 'The Apache License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    }
  }

  developers {
    developer {
      id 'jkinkead'
      name 'Jesse Kinkead'
      email 'jesse.kinkead@nordstrom.com'
    }
    developer {
      id 'xjdr'
      name 'Jeff Rose'
      email 'jeff.rose@nordstrom.com'
    }
    developer {
      id 'andyday'
      name 'Andy Day'
      email 'andy.day@nordstrom.com'
    }
  }
}

publishing {
  publications {
    xrpcMaven(MavenPublication) {
      from components.java
      groupId rootProject.group
      artifactId rootProject.archivesBaseName
      version rootProject.version
      artifact sourcesJar
      artifact javadocJar

      pom.withXml {
        asNode().appendNode('description', rootProject.description)
        asNode().appendNode('name', 'xrpc testing library')
        asNode().appendNode('url', 'https://github.com/Nordstrom/xrpc')
        asNode().children().last() + pomExtra
      }
    }
  }
}
